<%@ jet
imports="
    org.talend.core.model.process.INode
    org.talend.core.model.process.ElementParameterParser
    org.talend.core.model.metadata.IMetadataTable 
    org.talend.designer.codegen.config.CodeGeneratorArgument
    java.util.List
    java.util.Map
    java.util.ArrayList
    org.talend.commons.utils.StringUtils
    org.talend.core.model.process.IConnection
    org.talend.core.model.metadata.IMetadataColumn
    org.talend.core.model.process.EConnectionType
    org.talend.core.model.metadata.types.JavaTypesManager
"
%>

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();

String min = ElementParameterParser.getValue(node, "__MIN__");
String max = ElementParameterParser.getValue(node, "__MAX__");
String prob_out = ElementParameterParser.getValue(node, "__PROB_OUT__");

%>

<%
if (!"\"\"".equals(min)) {
%>
<%
}
%>
<%
if (!"\"\"".equals(max)) {
%>
<%
}
%>


es.unex.sextante.gridCalculus.generateRandomUniform.GenerateRandomUniformAlgorithm alg_<%=cid %> = new es.unex.sextante.gridCalculus.generateRandomUniform.GenerateRandomUniformAlgorithm();


es.unex.sextante.core.ParametersSet params_<%=cid %> = alg_<%=cid %>.getParameters();
<%
if (!"\"\"".equals(min)) {
%>
params_<%=cid %>.getParameter("MIN").setParameterValue(Double.valueOf(<%=min%>));
<%
}
%>
<%
if (!"\"\"".equals(max)) {
%>
params_<%=cid %>.getParameter("MAX").setParameterValue(Double.valueOf(<%=max%>));
<%
}
%>


// Output objects ...
es.unex.sextante.core.OutputObjectsSet outputs_<%=cid %> = alg_<%=cid %>.getOutputObjects();
es.unex.sextante.outputs.Output af_<%=cid %>_prob_out = outputs_<%=cid %>.getOutput(es.unex.sextante.gridCalculus.generateRandomUniform.GenerateRandomUniformAlgorithm.PROB);
af_<%=cid %>_prob_out.setOutputChannel(new es.unex.sextante.outputs.FileOutputChannel(<%=prob_out%>));
globalMap.put("<%=cid %>_PROB_OUT", <%=prob_out%>);
//if (alg_<%=cid %>.getUserCanDefineOutputExtent()) {
// TODO : get Extent
//}


es.unex.sextante.geotools.GTOutputFactory outputFactory_<%=cid %> = new es.unex.sextante.geotools.GTOutputFactory();
try {
alg_<%=cid %>.execute(null, outputFactory_<%=cid %>);
} catch (Exception e) {
  e.printStackTrace();
}


