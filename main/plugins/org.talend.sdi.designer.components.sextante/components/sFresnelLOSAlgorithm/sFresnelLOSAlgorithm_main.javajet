<%@ jet
imports="
    org.talend.core.model.process.INode
    org.talend.core.model.process.ElementParameterParser
    org.talend.core.model.metadata.IMetadataTable 
    org.talend.designer.codegen.config.CodeGeneratorArgument
    java.util.List
    java.util.Map
    java.util.ArrayList
    org.talend.commons.utils.StringUtils
    org.talend.core.model.process.IConnection
    org.talend.core.model.metadata.IMetadataColumn
    org.talend.core.model.process.EConnectionType
    org.talend.core.model.metadata.types.JavaTypesManager
"
%>

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();

String dem = ElementParameterParser.getValue(node, "__DEM__");
String point = ElementParameterParser.getValue(node, "__POINT_X__") + ", " + ElementParameterParser.getValue(node, "__POINT_Y__");
String point2 = ElementParameterParser.getValue(node, "__POINT2_X__") + ", " + ElementParameterParser.getValue(node, "__POINT2_Y__");
String height = ElementParameterParser.getValue(node, "__HEIGHT__");
String height2 = ElementParameterParser.getValue(node, "__HEIGHT2__");
String lambda = ElementParameterParser.getValue(node, "__LAMBDA__");

%>

<%
if (!"\"\"".equals(dem)) {
%>
// Create a RASTER coverage
es.unex.sextante.geotools.GTRasterLayer layer_<%=cid %>_dem = new es.unex.sextante.geotools.GTRasterLayer();
java.net.URL url_<%=cid %>_dem = new java.io.File(<%=dem %>).toURL();
org.geotools.gce.arcgrid.ArcGridReader agr_<%=cid %>_dem = new org.geotools.gce.arcgrid.ArcGridReader(url_<%=cid %>_dem);
org.geotools.coverage.grid.GridCoverage2D coverage_<%=cid %>_dem = (org.geotools.coverage.grid.GridCoverage2D) agr_<%=cid %>_dem.read(null);
layer_<%=cid %>_dem.create(coverage_<%=cid %>_dem);
layer_<%=cid %>_dem.setName("DEM");
<%
}
%>
<%
if (!"\"\"".equals(point)) {
%>
<%
}
%>
<%
if (!"\"\"".equals(point2)) {
%>
<%
}
%>
<%
if (!"\"\"".equals(height)) {
%>
<%
}
%>
<%
if (!"\"\"".equals(height2)) {
%>
<%
}
%>
<%
if (!"\"\"".equals(lambda)) {
%>
<%
}
%>


es.unex.sextante.lighting.fresnelLos.FresnelLOSAlgorithm alg_<%=cid %> = new es.unex.sextante.lighting.fresnelLos.FresnelLOSAlgorithm();


es.unex.sextante.core.ParametersSet params_<%=cid %> = alg_<%=cid %>.getParameters();
<%
if (!"\"\"".equals(dem)) {
%>
params_<%=cid %>.getParameter(es.unex.sextante.lighting.fresnelLos.FresnelLOSAlgorithm.DEM).setParameterValue(layer_<%=cid %>_dem);
<%
}
%>
<%
if (!"\"\"".equals(point)) {
%>
params_<%=cid %>.getParameter("POINT").setParameterValue(new java.awt.geom.Point2D.Double(<%=point %>));
<%
}
%>
<%
if (!"\"\"".equals(point2)) {
%>
params_<%=cid %>.getParameter("POINT2").setParameterValue(new java.awt.geom.Point2D.Double(<%=point2 %>));
<%
}
%>
<%
if (!"\"\"".equals(height)) {
%>
params_<%=cid %>.getParameter("HEIGHT").setParameterValue(Double.valueOf(<%=height%>));
<%
}
%>
<%
if (!"\"\"".equals(height2)) {
%>
params_<%=cid %>.getParameter("HEIGHT2").setParameterValue(Double.valueOf(<%=height2%>));
<%
}
%>
<%
if (!"\"\"".equals(lambda)) {
%>
params_<%=cid %>.getParameter("LAMBDA").setParameterValue(Double.valueOf(<%=lambda%>));
<%
}
%>


// Output objects ...
es.unex.sextante.core.OutputObjectsSet outputs_<%=cid %> = alg_<%=cid %>.getOutputObjects();
// TODO Unsupported type: GRAPH[OutputChart]


es.unex.sextante.geotools.GTOutputFactory outputFactory_<%=cid %> = new es.unex.sextante.geotools.GTOutputFactory();
try {
alg_<%=cid %>.execute(null, outputFactory_<%=cid %>);
} catch (Exception e) {
  e.printStackTrace();
}


