<%@ jet 
imports="org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser 
		org.talend.core.model.metadata.IMetadataTable 
		org.talend.core.model.metadata.IMetadataColumn 
		org.talend.core.model.process.IConnection
		org.talend.core.model.process.IConnectionCategory
		org.talend.core.model.metadata.types.JavaTypesManager
		org.talend.core.model.metadata.types.JavaType
		org.talend.designer.codegen.config.CodeGeneratorArgument
		java.util.List 
" 
%>

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();
List<IMetadataTable> metadatas = node.getMetadataList();
if ((metadatas!=null)&&(metadatas.size()>0)) {
    IMetadataTable metadata = metadatas.get(0);
    if (metadata!=null) {

        //get the input connection
        IConnection inputConn = null;
        String inComingName = "";  
        List< ? extends IConnection> connsIn = node.getIncomingConnections();     
        for (IConnection conn : connsIn) {
			inputConn = conn;
			break; //only get the first connection
        }

        if(inputConn != null){
        	inComingName = inputConn.getName();
        }

        String origin = ElementParameterParser.getValue(node, "__ORIGIN__");
        %>
        
        int nb_line_<%= cid %> = 0;

		org.geotools.data.FeatureSource
			<org.opengis.feature.simple.SimpleFeatureType, org.opengis.feature.simple.SimpleFeature> fs_<%=cid %> = 
				result_<%=origin %>_AGG.getFeatureSource();	// FIXME : AGG suffix could be different?
				// AGG MUST be the name of the input component of sDsIn in templates.
		org.geotools.feature.FeatureCollection
			<org.opengis.feature.simple.SimpleFeatureType, org.opengis.feature.simple.SimpleFeature> fc_<%=cid %> = 
				fs_<%=cid %>.getFeatures();
		org.geotools.feature.FeatureIterator
			<org.opengis.feature.simple.SimpleFeature> reader_<%=cid %> = 
				fc_<%=cid %>.features();
		
		while(reader_<%=cid %>.hasNext()) {
		
		    org.opengis.feature.simple.SimpleFeature feature_<%=cid %> = reader_<%=cid %>.next();
		    org.talend.sdi.geometry.Geometry geometry_<%=cid %> =
		        new org.talend.sdi.geometry.Geometry(
		            (com.vividsolutions.jts.geom.Geometry) feature_<%=cid %>.getDefaultGeometry()
		            );
		    <%
            //begin
            //
    		List< ? extends IConnection> conns = node.getOutgoingSortedConnections();
    		String firstConnName = "";
    		if (conns!=null) {
    			if (conns.size()>0) {
    				IConnection conn = conns.get(0);
    				firstConnName = conn.getName();
    		%>
    		// name : <%=firstConnName %>
    		<%
    				List<IMetadataColumn> listColumns = metadata.getListColumns();
    				int size = listColumns.size();
    				if (conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {
    					for (int i=0; i<size; i++) {
    						IMetadataColumn column = listColumns.get(i);
    						String typeToGenerate = JavaTypesManager.getTypeToGenerate(column.getTalendType(), column.isNullable());
							if (typeToGenerate.equals("Geometry")) {
    						//
    						//end
    						%>					
    						<%=conn.getName() %>.<%=column.getLabel() %> = geometry_<%=cid %>;
    						<%
    						} else {
    						%>					
    						<%=conn.getName() %>.<%=column.getLabel() %> = (<%=typeToGenerate %>) feature_<%=cid %>.getAttribute("<%=column.getLabel() %>");
    						<%
    						}
    						//start
    						//
    					}
    				}
    			}
    		}
    }
}
%>