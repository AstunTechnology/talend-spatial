<%@ jet
imports="
    org.talend.core.model.process.INode
    org.talend.core.model.process.ElementParameterParser
    org.talend.core.model.metadata.IMetadataTable 
    org.talend.designer.codegen.config.CodeGeneratorArgument
    java.util.List
    java.util.Map
    java.util.ArrayList
    org.talend.commons.utils.StringUtils
    org.talend.core.model.process.IConnection
    org.talend.core.model.metadata.IMetadataColumn
    org.talend.core.model.process.EConnectionType
    org.talend.core.model.metadata.types.JavaTypesManager
"
%>

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();
String method = ElementParameterParser.getValue(node, "__METHOD__");

List< ? extends IConnection> conns = node.getIncomingConnections();
for (IConnection conn : conns) {
    if ((conn.getLineStyle().equals(EConnectionType.FLOW_MAIN))) {
%>

es.unex.sextante.geotools.GTRasterLayer layer_<%=cid %> = 
    new es.unex.sextante.geotools.GTRasterLayer();
layer_<%=cid %>.create(
	(org.geotools.coverage.grid.GridCoverage2D) <%=conn.getName() %>.RASTER
	);
layer_<%=cid %>.setName("ASPECT");

es.unex.sextante.morphometry.aspect.AspectAlgorithm alg_<%=cid %> = 
    new es.unex.sextante.morphometry.aspect.AspectAlgorithm();
es.unex.sextante.core.ParametersSet params_<%=cid %> = alg_<%=cid %>.getParameters();
params_<%=cid %> .getParameter(es.unex.sextante.morphometry.aspect.AspectAlgorithm.DEM).setParameterValue(layer_<%=cid %>);
params_<%=cid %> .getParameter(es.unex.sextante.morphometry.aspect.AspectAlgorithm.METHOD).setParameterValue(<%=method %>);

es.unex.sextante.core.OutputObjectsSet outputs_<%=cid %> = alg_<%=cid %>.getOutputObjects();
es.unex.sextante.outputs.Output out_<%=cid %> = outputs_<%=cid %>.getOutput(es.unex.sextante.morphometry.aspect.AspectAlgorithm.ASPECT);
String imgFilename_<%=cid %> = System.getProperty("java.io.tmpdir") + "/" + java.util.UUID.randomUUID().toString() + ".asc";
out_<%=cid %>.setOutputChannel(new es.unex.sextante.outputs.FileOutputChannel(imgFilename_<%=cid %>));

es.unex.sextante.geotools.GTOutputFactory outputFactory_<%=cid %> = 
    new es.unex.sextante.geotools.GTOutputFactory();
try { 
    alg_<%=cid %>.execute(null, outputFactory_<%=cid %>);
} catch (es.unex.sextante.exceptions.GeoAlgorithmExecutionException e) {
    System.out.println("GeoAlgorithmExecutionException " + e.getMessage());
}

/* es.unex.sextante.dataObjects.IRasterLayer result_<%=cid %> = 
    (es.unex.sextante.dataObjects.IRasterLayer) out_<%=cid %>.getOutputObject();
    */
java.net.URL url_<%=cid %> = new java.io.File(
		imgFilename_<%=cid %>).toURL();
org.geotools.gce.arcgrid.ArcGridReader agr_<%=cid %> = new org.geotools.gce.arcgrid.ArcGridReader(
		url_<%=cid %>);
org.geotools.coverage.grid.GridCoverage2D gc_<%=cid %> = (org.geotools.coverage.grid.GridCoverage2D) agr_<%=cid %>
		.read(null); 
<%
		List< ? extends IConnection> outconns = node.getOutgoingSortedConnections();
		for (IConnection outconn : outconns) {
		    if ((outconn.getLineStyle().equals(EConnectionType.FLOW_MAIN))) {
%>
//<%=outconn.getName() %>.RASTER = (org.geotools.coverage.grid.GridCoverage2D) result_<%=cid %>.getBaseDataObject();
<%=outconn.getName() %>.RASTER = gc_<%=cid %>; 

<%
			}
		}
	}
}
%>