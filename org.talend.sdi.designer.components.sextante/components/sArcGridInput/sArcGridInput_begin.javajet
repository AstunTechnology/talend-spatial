<%@ jet
imports="
    org.talend.core.model.process.INode
    org.talend.core.model.process.ElementParameterParser
    org.talend.core.model.metadata.IMetadataTable 
    org.talend.designer.codegen.config.CodeGeneratorArgument
    java.util.List
    java.util.Map
    java.util.ArrayList
    org.talend.commons.utils.StringUtils
    org.talend.core.model.process.IConnection
    org.talend.core.model.metadata.IMetadataColumn
    org.talend.core.model.process.EConnectionType
    org.talend.core.model.metadata.types.JavaTypesManager
"
%>

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();
String in = ElementParameterParser.getValue(node, "__INPUT__");
%>

es.unex.sextante.geotools.GTOutputFactory m_OutputFactory_<%=cid %> = 
    new es.unex.sextante.geotools.GTOutputFactory();
/*
 * First we need some data.
 * Let's open a DEM
 */
java.net.URL url_<%=cid %> = 
		new java.io.File(<%=in %>).toURL();
org.geotools.gce.arcgrid.ArcGridReader agr_<%=cid %> = 
		new org.geotools.gce.arcgrid.ArcGridReader(url_<%=cid %>);
org.geotools.coverage.grid.GridCoverage2D gc_<%=cid %> = 
		(org.geotools.coverage.grid.GridCoverage2D) agr_<%=cid %>.read(null);
<%
List< ? extends IConnection> conns = node.getOutgoingSortedConnections();
String firstConnName = "";
if (conns!=null) {
    if (conns.size()>0) {
        for (int i = 0; i < conns.size(); i++) {
            IConnection conn = conns.get(i);
            if (conn.getLineStyle().equals(EConnectionType.FLOW_MAIN)
            	|| conn.getLineStyle().equals(EConnectionType.FLOW_MERGE)) {
%>
<%=conn.getName() %>.RASTER = gc_<%=cid %>;
<%
			}
		}
	}
}
%>
/* TODO remove
 * Set global var for ON_COMPONENT_OK link
 * to be catch by next component
 */
globalMap.put("<%=cid %>.RASTERFILE", <%=in %>);
